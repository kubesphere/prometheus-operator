apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: prometheus-k8s-rules
  namespace: kubesphere-monitoring-system
spec:
  groups:
  - name: k8s.rules
    rules:
    - expr: |
        sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])) by (namespace)
      record: namespace:container_cpu_usage_seconds_total:sum_rate
    - expr: |
        sum(container_memory_usage_bytes{job="kubelet", image!="", container_name!=""}) by (namespace)
      record: namespace:container_memory_usage_bytes:sum
    - expr: |
        sum(container_memory_usage_bytes{job="kubelet", image!="", container_name!=""} - container_memory_cache{job="kubelet", image!="", container_name!=""}) by (namespace)
      record: namespace:container_memory_usage_bytes_wo_cache:sum
  - name: node.rules
    rules:
    - expr: |
        max(label_replace(kube_pod_info{job="kube-state-metrics"}, "pod", "$1", "pod", "(.*)")) by (node, namespace, pod)
      record: 'node_namespace_pod:kube_pod_info:'
    - expr: |
        count by (node) (sum by (node, cpu) (
          node_cpu_seconds_total{job="node-exporter"}
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        ))
      record: node:node_num_cpu:sum
    - expr: |
        avg(irate(node_cpu_seconds_total{job="node-exporter",mode="used"}[5m]))
      record: :node_cpu_utilisation:avg1m
    - expr: |
        avg by (node) (
          irate(node_cpu_seconds_total{job="node-exporter",mode="used"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:)
      record: node:node_cpu_utilisation:avg1m
    - expr: |
        1 -
        sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
        /
        sum(node_memory_MemTotal_bytes{job="node-exporter"})
      record: ':node_memory_utilisation:'
    - expr: |
        sum by (node) (
          (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
          * on (namespace, pod) group_left(node)
            node_namespace_pod:kube_pod_info:
        )
      record: node:node_memory_bytes_available:sum
    - expr: |
        sum by (node) (
          node_memory_MemTotal_bytes{job="node-exporter"}
          * on (namespace, pod) group_left(node)
            node_namespace_pod:kube_pod_info:
        )
      record: node:node_memory_bytes_total:sum
    - expr: |
        1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
      record: 'node:node_memory_utilisation:'
    - expr: |
        sum by (node) (
          irate(node_disk_reads_completed_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_iops_reads:sum
    - expr: |
        sum by (node) (
          irate(node_disk_writes_completed_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_iops_writes:sum
    - expr: |
        sum by (node) (
          irate(node_disk_read_bytes_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_throughput_bytes_read:sum
    - expr: |
        sum by (node) (
          irate(node_disk_written_bytes_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_throughput_bytes_written:sum
    - expr: |
        sum(irate(node_network_receive_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m])) +
        sum(irate(node_network_transmit_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m]))
      record: :node_net_utilisation:sum_irate
    - expr: |
        sum by (node) (
          (irate(node_network_receive_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m]) +
          irate(node_network_transmit_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m]))
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_utilisation:sum_irate
    - expr: |
        sum by (node) (
          irate(node_network_transmit_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_bytes_transmitted:sum_irate
    - expr: |
        sum by (node) (
          irate(node_network_receive_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_bytes_received:sum_irate
    - expr: |
        max(
          max(
            kube_pod_info{job="kube-state-metrics", host_ip!=""}
          ) by (node, host_ip)
          * on (host_ip) group_right (node)
          label_replace(
            (max(node_filesystem_files{job="node-exporter", mountpoint="/etc/hosts"}) by (instance)), "host_ip", "$1", "instance", "(.*):.*"
          )
        ) by (node)
      record: 'node:node_inodes_total:'
    - expr: |
        max(
          max(
            kube_pod_info{job="kube-state-metrics", host_ip!=""}
          ) by (node, host_ip)
          * on (host_ip) group_right (node)
          label_replace(
            (max(node_filesystem_files_free{job="node-exporter", mountpoint="/etc/hosts"}) by (instance)), "host_ip", "$1", "instance", "(.*):.*"
          )
        ) by (node)
      record: 'node:node_inodes_free:'
  - name: etcd.rules
    rules:
    - expr: |
        sum(up{job="etcd"} == 1)
      record: etcd:up:sum
    - expr: |
        sum(changes(etcd_server_leader_changes_seen_total{job="etcd"}[1h]))
      record: etcd:etcd_server_leader_changes_seen:sum_changes
    - expr: |
        sum(irate(etcd_server_proposals_failed_total{job="etcd"}[5m]))
      record: etcd:etcd_server_proposals_failed:sum_irate
    - expr: |
        sum(irate(etcd_server_proposals_applied_total{job="etcd"}[5m]))
      record: etcd:etcd_server_proposals_applied:sum_irate
    - expr: |
        sum(irate(etcd_server_proposals_committed_total{job="etcd"}[5m]))
      record: etcd:etcd_server_proposals_committed:sum_irate
    - expr: |
        sum(etcd_server_proposals_pending{job="etcd"})
      record: etcd:etcd_server_proposals_pending:sum
    - expr: |
        sum(label_replace(etcd_debugging_mvcc_db_total_size_in_bytes{job="etcd"},"node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_debugging_mvcc_db_total_size:sum
    - expr: |
        sum(label_replace(etcd_mvcc_db_total_size_in_bytes{job="etcd"},"node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_mvcc_db_total_size:sum
    - expr: |
        sum(irate(etcd_network_client_grpc_received_bytes_total{job="etcd"}[5m]))
      record: etcd:etcd_network_client_grpc_received_bytes:sum_irate
    - expr: |
        sum(irate(etcd_network_client_grpc_sent_bytes_total{job="etcd"}[5m]))
      record: etcd:etcd_network_client_grpc_sent_bytes:sum_irate
    - expr: |
        sum(irate(grpc_server_started_total{job="etcd",grpc_type="unary"}[5m]))
      record: etcd:grpc_server_started:sum_irate
    - expr: |
        sum(irate(grpc_server_handled_total{job="etcd",grpc_type="unary",grpc_code!="OK"}[5m]))
      record: etcd:grpc_server_handled:sum_irate
    - expr: |
        sum(irate(grpc_server_msg_received_total{job="etcd"}[5m]))
      record: etcd:grpc_server_msg_received:sum_irate
    - expr: |
        sum(irate(grpc_server_msg_sent_total{job="etcd"}[5m]))
      record: etcd:grpc_server_msg_sent:sum_irate
    - expr: |
        sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_sum{job="etcd"}[5m])) by (instance) / sum(irate(etcd_disk_wal_fsync_duration_seconds_count{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_disk_wal_fsync_duration:avg
    - expr: |
        sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_sum{job="etcd"}[5m])) by (instance) / sum(irate(etcd_disk_backend_commit_duration_seconds_count{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_disk_backend_commit_duration:avg
  - name: etcd_histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.99"
      record: etcd:etcd_disk_wal_fsync_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.9"
      record: etcd:etcd_disk_wal_fsync_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.5"
      record: etcd:etcd_disk_wal_fsync_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.99"
      record: etcd:etcd_disk_backend_commit_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.9"
      record: etcd:etcd_disk_backend_commit_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.5"
      record: etcd:etcd_disk_backend_commit_duration:histogram_quantile
  - name: apiserver.rules
    rules:
    - expr: |
        sum(up{job="apiserver"} == 1)
      record: apiserver:up:sum
    - expr: |
        sum(irate(apiserver_request_count{job="apiserver"}[5m]))
      record: apiserver:apiserver_request_count:sum_irate
    - expr: |
        sum(irate(apiserver_request_count{job="apiserver"}[5m])) by (verb)
      record: apiserver:apiserver_request_count:sum_verb_irate
    - expr: |
        sum(irate(apiserver_request_latencies_sum{job="apiserver", verb!~"WATCH|CONNECT"}[5m])) / sum(irate(apiserver_request_latencies_count{job="apiserver", verb!~"WATCH|CONNECT"}[5m]))/ 1e+06
      record: apiserver:apiserver_request_latencies:avg
    - expr: |
        sum(irate(apiserver_request_latencies_sum{job="apiserver", verb!~"WATCH|CONNECT"}[5m])) by (verb) / sum(irate(apiserver_request_latencies_count{job="apiserver", verb!~"WATCH|CONNECT"}[5m])) by (verb) / 1e+06
      record: apiserver:apiserver_request_latencies:avg_by_verb
  - name: scheduler.rules
    rules:
    - expr: |
        sum(up{job="kube-scheduler"} == 1)
      record: scheduler:up:sum
    - expr: |
        sum(scheduler_schedule_attempts_total{job="kube-scheduler"}) by (result)
      record: scheduler:scheduler_schedule_attempts:sum
    - expr: |
        sum(rate(scheduler_schedule_attempts_total{job="kube-scheduler"}[5m])) by (result)
      record: scheduler:scheduler_schedule_attempts:sum_rate
    - expr: |
        (sum(rate(scheduler_e2e_scheduling_latency_microseconds_sum{job="kube-scheduler"}[1h]))  / sum(rate(scheduler_e2e_scheduling_latency_microseconds_count{job="kube-scheduler"}[1h]))) /  1e+06
      record: scheduler:scheduler_e2e_scheduling_latency:avg
  - name: scheduler_histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[1h])) by (le) ) / 1e+06
      labels:
        quantile: "0.99"
      record: scheduler:scheduler_e2e_scheduling_latency:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[1h])) by (le) ) / 1e+06
      labels:
        quantile: "0.9"
      record: scheduler:scheduler_e2e_scheduling_latency:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[1h])) by (le) ) / 1e+06
      labels:
        quantile: "0.5"
      record: scheduler:scheduler_e2e_scheduling_latency:histogram_quantile
  - name: controller_manager.rules
    rules:
    - expr: |
        sum(up{job="kube-controller-manager"} == 1)
      record: controller_manager:up:sum
  - name: coredns.rules
    rules:
    - expr: |
        sum(up{job="coredns"} == 1)
      record: coredns:up:sum
    - expr: |
        sum(irate(coredns_cache_hits_total[5m]))
      record: coredns:coredns_cache_hits_total:sum_irate
    - expr: |
        sum(irate(coredns_cache_misses[5m]))
      record: coredns:coredns_cache_misses:sum_irate
    - expr: |
        sum(irate(coredns_dns_request_count_total{job="coredns"}[5m]))
      record: coredns:coredns_dns_request_count:sum_irate
    - expr: |
        sum(irate(coredns_dns_request_type_count_total[5m])) by (type)
      record: coredns:coredns_dns_request_type_count:sum_irate
    - expr: |
        sum(irate(coredns_dns_response_rcode_count_total[5m])) by (rcode)
      record: coredns:coredns_dns_response_rcode_count:sum_irate
    - expr: |
        sum(irate(coredns_panic_count_total[5m]))
      record: coredns:coredns_panic_count:sum_irate
    - expr: |
        sum(irate(coredns_proxy_request_count_total{job="coredns"}[5m]))
      record: coredns:coredns_proxy_request_count:sum_irate
    - expr: |
        sum(irate(coredns_dns_request_duration_seconds_sum{job="coredns"}[5m])) / sum(irate(coredns_dns_request_duration_seconds_count{job="coredns"}[5m]))
      record: coredns:coredns_dns_request_duration:avg
    - expr: |
        sum(irate(coredns_proxy_request_duration_seconds_sum{job="coredns"}[5m])) / sum(irate(coredns_proxy_request_duration_seconds_count{job="coredns"}[5m]))
      record: coredns:coredns_proxy_request_duration:avg
  - name: coredns_histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(irate(coredns_dns_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.99"
      record: coredns:coredns_dns_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(irate(coredns_dns_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.9"
      record: coredns:coredns_dns_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(irate(coredns_dns_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.5"
      record: coredns:coredns_dns_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(irate(coredns_proxy_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.99"
      record: coredns:coredns_proxy_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(irate(coredns_proxy_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.9"
      record: coredns:coredns_proxy_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(irate(coredns_proxy_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.5"
      record: coredns:coredns_proxy_request_duration:histogram_quantile
  - name: prometheus.rules
    rules:
    - expr: |
        sum(up{job="prometheus-k8s"} == 1)
      record: prometheus:up:sum
    - expr: |
        sum(rate(prometheus_tsdb_head_samples_appended_total{job="prometheus-k8s"} [5m])) by (job)
      record: prometheus:prometheus_tsdb_head_samples_appended:sum_rate
